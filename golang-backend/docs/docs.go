// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/conversation": {
            "get": {
                "description": "Retrieve all chat log messages for a given contact.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "summary": "Get conversation history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact phone number (e.g., +6281234567890)",
                        "name": "contact",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ChatLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/conversation/send": {
            "post": {
                "description": "Send a WhatsApp message to a client and log the transaction in the chatlogs collection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "summary": "Send a conversation message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ConversationSendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/message/bulk": {
            "post": {
                "description": "Send multiple WhatsApp messages in a single request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Bulk Messaging",
                "parameters": [
                    {
                        "description": "Bulk message data",
                        "name": "messages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.BulkMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/message/send": {
            "post": {
                "description": "Send a WhatsApp message to a specific number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Send a single message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/twilio-webhook": {
            "post": {
                "description": "Receives an inbound WhatsApp message from Twilio and logs the message details (sender, body, timestamp, device IP) into MongoDB.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "Inbound WhatsApp Message Webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sender's WhatsApp number (e.g., whatsapp:+628xxxxxxx)",
                        "name": "From",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message body",
                        "name": "Body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/twilio-webhook/messages": {
            "get": {
                "description": "Memanggil Node di http://nodehost:3881/api/messages dan meneruskan respon JSON ke klien",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Twilio"
                ],
                "summary": "Get inbound messages from Node",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.inboundMessage"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.inboundMessageError"
                        }
                    }
                }
            }
        },
        "/message/{id}": {
            "put": {
                "description": "Update message details by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Update a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update message payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a message by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Delete a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/send-twilio-message": {
            "post": {
                "description": "Menerima JSON { \"to\": \"+628xxx\", \"body\": \"...\" } dan mengirim pesan WA melalui Twilio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Twilio"
                ],
                "summary": "Send a WhatsApp message via Twilio",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.sendTwilioMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.sendTwilioMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/routes.sendTwilioMessageError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.sendTwilioMessageError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.BulkMessageRequest": {
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.SendMessageRequest"
                    }
                }
            }
        },
        "controllers.ConversationSendRequest": {
            "type": "object",
            "required": [
                "body",
                "contact"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "contact": {
                    "description": "Nomor WhatsApp client (contoh: +6281234567890)",
                    "type": "string"
                }
            }
        },
        "controllers.SendMessageRequest": {
            "type": "object",
            "required": [
                "body",
                "to"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdateMessageRequest": {
            "type": "object",
            "required": [
                "body"
            ],
            "properties": {
                "body": {
                    "type": "string"
                }
            }
        },
        "models.ChatLog": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Isi pesan",
                    "type": "string"
                },
                "device_ip": {
                    "description": "Alamat IP perangkat pengirim",
                    "type": "string"
                },
                "direction": {
                    "description": "\"inbound\" atau \"outbound\"",
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "to": {
                    "description": "Nomor yang menerima pesan (misalnya, nomor Twilio)",
                    "type": "string"
                }
            }
        },
        "routes.inboundMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "Hello from client"
                },
                "from": {
                    "type": "string",
                    "example": "whatsapp:+6281234567890"
                }
            }
        },
        "routes.inboundMessageError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to get messages from Node"
                }
            }
        },
        "routes.sendTwilioMessageError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "some error detail"
                },
                "msg": {
                    "type": "string",
                    "example": "Failed to send message"
                }
            }
        },
        "routes.sendTwilioMessageRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "Hello from test"
                },
                "to": {
                    "type": "string",
                    "example": "+6281234567890"
                }
            }
        },
        "routes.sendTwilioMessageResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "Message sent successfully"
                },
                "sid": {
                    "type": "string",
                    "example": "SMxxxxxxxxxxxxxx"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
